import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { ProductItemInterface } from '../../components/ProductItem';
import ProductItem from '../../components/ProductItem';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
interface Props {
  products: ProductItemInterface[];
}
const Shop: NextPage<Props> = ({ products }) => {
  const [searchQuery, setSearchQuery] = useState<string>('');
  const router = useRouter();

  const onSearchSubmit = (e: any) => {
    e.preventDefault();
    if (searchQuery.length < 3) {
      return;
    }
    router.push({
      query: {
        ...router.query,
        q: searchQuery,
      },
    });
  };
  useEffect(() => {
    if (router.query.q) {
      setSearchQuery(router.query.q.toString());
    }
  }, [router.query]);
  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1"
                data-filter="*"
                onClick={() => {
                  router.push({
                    query: {},
                  });
                  setSearchQuery('');
                }}
              >
                All Products
              </button>

              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                data-filter=".women"
                onClick={() => {
                  router.push({
                    query: {
                      gender: 'women',
                    },
                  });
                  setSearchQuery('');
                }}
              >
                Women
              </button>

              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                data-filter=".men"
                onClick={() => {
                  router.push({
                    query: {
                      gender: 'man',
                    },
                  });
                  setSearchQuery('');
                }}
              >
                Men
              </button>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div
                className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search
              "
                onClick={onSearchSubmit}
              >
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {products && products.length > 0 ? (
              products.map((prod) => <ProductItem key={prod.id} prod={prod} />)
            ) : (
              <p className="ml-4">No products match your search</p>
            )}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const { gender } = query;
  const searchQuery = query.q;
  if (searchQuery && gender) {
    const res = await fetch(
      `https://graceful-bead-song.glitch.me/products?gender_like=${gender}&q=${searchQuery}`
    );
    const products = await res.json();

    return {
      props: {
        products,
      },
    };
  } else if (searchQuery) {
    const res = await fetch(
      `https://graceful-bead-song.glitch.me/products?q=${searchQuery}`
    );
    const products = await res.json();

    return {
      props: {
        products,
      },
    };
  } else {
    const res = await fetch(
      `http://graceful-bead-song.glitch.me/products${
        gender ? `?gender_like=${gender}` : ''
      }
    `
    );
    const products = await res.json();

    return {
      props: {
        products,
      },
    };
  }
};
export default Shop;
