import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import BlogItem, { BlogItemInterface } from '../components/BlogItem';
import PageTitle from '../components/PageTitle';
import ProductItem, { ProductItemInterface } from '../components/ProductItem';
interface Props {
  blogSearchMatch: BlogItemInterface[];
  productSearchMatch: ProductItemInterface[];
}
const Search: NextPage<Props> = ({ blogSearchMatch, productSearchMatch }) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Search" />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          <>
            <h2 className="mb-5">Blogs</h2>
            <div className="row isotope-grid ">
              <div className="col-4">
                {blogSearchMatch && blogSearchMatch.length > 0 ? (
                  blogSearchMatch.map((item) => (
                    <BlogItem blogData={item} key={item.id} />
                  ))
                ) : (
                  <p className="text-muted">
                    There are currently no blogs that match your search
                  </p>
                )}
              </div>
            </div>
          </>

          <>
            <h2 className="my-5">Products</h2>
            <div className="row isotope-grid">
              {productSearchMatch && productSearchMatch.length > 0 ? (
                productSearchMatch.map((item) => (
                  <ProductItem prod={item} key={item.id} />
                ))
              ) : (
                <p className="text-muted">
                  There are currently no products that match your search
                </p>
              )}
            </div>
          </>
        </div>
      </div>
    </>
  );
};
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const searchQuery = query.q;
  if (searchQuery) {
    const resBlog = await fetch(
      `https://graceful-bead-song.glitch.me/blogs?q=${searchQuery}`
    );
    const blogSearchMatch = await resBlog.json();
    const resProducts = await fetch(
      `https://graceful-bead-song.glitch.me/products${`?q=${searchQuery}`}`
    );
    const productSearchMatch = await resProducts.json();
    return {
      props: {
        blogSearchMatch,
        productSearchMatch,
      },
    };
  }
  return {
    props: {},
  };
};
export default Search;
